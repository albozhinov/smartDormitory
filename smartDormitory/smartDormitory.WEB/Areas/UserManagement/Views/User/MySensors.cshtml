@model UserAllSensorsModel
@{
    ViewData["Title"] = "MySensors";
}

@{
    int minimalPolling = 1000 * Model.UserSensors.Min(s => s.PollingInterval);
}
<div class="row img-responsive" style="background-size:100% auto;">
    @foreach (var userSensor in Model.UserSensors)
    {
        if (userSensor.IsDeleted)
        {
            continue;
        }
        <div class="col-md-3 p-3">
            <partial name="_MySensorGrid" for="@userSensor" />
            <partial name="_DeleteSensorModal" model="null" />
        </div>
    }
</div>

@section Scripts{
    <script>
        jQuery.noConflict();
        $('#deleteModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var id = button.data('sensor-id') // Extract info from data-* attributes
            console.log(id);
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $(this)

            modal.find('input[name="Id"]').val(id)
        });

        function a() {
            location.reload();
        };


@section Scripts{

    <script>
        function ajaxCall() {
            $.ajax({
                url: '/UserManagement/User/UpdateSensors',
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#content').html(result);
                }
            });
        }
        setInterval(ajaxCall, @minimalPolling);
    </script>
}


